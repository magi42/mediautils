#!/usr/bin/python

canonpath = "/home/magi/kuvia/"

import re,os,sys

rotation = ""
root = "canon"

if len(sys.argv)<=1:
    print "Usage:\tcanon-half [flags] <imageID>"
    print "\twhere <imageid> is YYMMDD####"
    print "Flags:  -rotate <degrees>"
    print "        -root <number> (two digits)"
    print "        -s                 Small image"
    print "        -np                No preview"
    sys.exit (1)

parseargs = 1
small     = 0
preview   = 1
while parseargs:
    if sys.argv[1]=='-r':
        rotation = "-rotate " + sys.argv[2]
        del sys.argv[1:3]
    elif sys.argv[1]=='-s':
        small = 1
        del sys.argv[1:2]
    elif sys.argv[1]=='-np':
        preview = 0
        del sys.argv[1:2]
    elif sys.argv[1]=='-root':
        root = "casio" + sys.argv[2]
        del sys.argv[1:3]
    else:
        parseargs = 0

canonpath = canonpath + root

################################################################################

match = re.search (r'^([0-9]{2})([0-9]{2})([0-9]{2})([ab]?)-(.+)', sys.argv[1])
if match:
    year2  = match.group(1)
    month  = match.group(2)
    day    = match.group(3)
    dayfld = match.group(4)
    imgno  = match.group(5)
    datenum = year2+month+day+dayfld
    dirpath = "%s/20%s/20%s%s/20%s/" % (canonpath, year2, year2, month, datenum)
    #print dirpath
    filename_up = "IMG_%s.JPG" % (imgno)
    filename = filename_up
    try:
        statinfo = os.stat(dirpath+filename)
    except:
        filename = filename.lower()
        try:
            statinfo = os.stat(dirpath+filename)
        except:
            if not statinfo:
                print "File '%s' does not exist." % (dirpath+filename)
                sys.exit(1)
        
    match = re.search (r'^[0-9]{2}([0-9]+)', sys.argv[1])
    if match:
        imgnum = match.group(1)
    else:
        print "Wasn't able to image number from name."
        sys.exit (1)
else:
    print "Invalid file name format."
    sys.exit (1)
    

### (Disabled, because we always want height 768) ###
# Check out image size
#ident = os.popen ("identify %s/%s/%s.[Jj][Pp][Gg]" % (canonpath, datenum, imgnum), "r")
#xsize = int (re.search (r'([0-9]+)x[0-9]+', ident.readline()).group(1))
#ident.close ()
#if xsize>1024:
#    xsize = xsize/2

geometry = "x768"
quality  = 85
if small:
    geometry = "20%%"
    quality = 75

# Actual picture
cpcmd = "convert -gravity southeast \\( %(dirpath)s%(filename)s %(rotation)s -geometry %(geometry)s \\) " \
        "/home/magi/texts/taide/ex_libris/watermark.png -composite IMG_%(imgno)s-half.jpg" \
        % ({'rotation':rotation, 'geometry':geometry, 'quality':quality,
           'dirpath':dirpath, 'filename':filename, 'imgno':imgno})
print "IMG_%s-half.jpg" % (imgno)
#print cpcmd
os.system (cpcmd)

# Preview image
if not small and preview:
    os.system ("mkdir -p preview")
    cpcmd = "convert %s -geometry x240 -quality 50 %s%s preview/IMG_%s-sml.jpg" \
            % (rotation, dirpath, filename, imgno)
    print "preview/IMG_%s-sml.jpg" % (imgno)
    os.system (cpcmd)
